version: '3.8'

# Infrastructure-only Docker Compose
# This file runs only MySQL and MinIO, allowing Spring Boot to run locally
# This approach matches the Alibaba Cloud deployment guide

services:
  # MySQL Database
  mysql:
    image: mysql:5.7
    container_name: weblog-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: weblog
      MYSQL_USER: weblog
      MYSQL_PASSWORD: 123456
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./mysql.cnf:/etc/mysql/conf.d/custom.cnf:ro
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_general_ci
    networks:
      - weblog-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: weblog-minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"   # API port
      - "9001:9001"   # Console port
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    networks:
      - weblog-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  weblog-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  minio_data:
    driver: local