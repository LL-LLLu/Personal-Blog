# Production server configuration for Vue.js frontend
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers for this server block
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;

    # Disable access log for health check
    location = /health.json {
        access_log off;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Handle Vue.js routing (SPA)
    location / {
        try_files $uri $uri/ @fallback;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot|otf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";

            # CORS headers for fonts and assets
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        }

        # Cache HTML with shorter expiry
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }

    # Fallback for Vue.js router
    location @fallback {
        rewrite ^.*$ /index.html last;
    }

    # API proxy to Spring Boot backend
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://weblog-backend-prod:8080/;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # Handle errors
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # Special rate limiting for authentication endpoints
    location ~ ^/api/(login|register|auth) {
        limit_req zone=login burst=5 nodelay;

        proxy_pass http://weblog-backend-prod:8080;
        proxy_http_version 1.1;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # MinIO file access proxy (optional)
    location /files/ {
        # Remove /files prefix and proxy to MinIO
        rewrite ^/files/(.*)$ /$1 break;
        proxy_pass http://weblog-minio-prod:9000/weblog/;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Cache static files served by MinIO
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Block sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /(package\.json|package-lock\.json|yarn\.lock|\.env.*|Dockerfile.*|docker-compose.*) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Optimize favicon requests
    location = /favicon.ico {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }

    # Security: disable server signature
    location = /robots.txt {
        expires 1y;
        add_header Cache-Control "public";
        access_log off;
    }
}

# HTTPS server block (uncomment and configure for SSL)
# server {
#     listen 443 ssl http2;
#     server_name yourdomain.com;
#
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # Include the same location blocks as HTTP server
#     # ... (copy from above)
# }